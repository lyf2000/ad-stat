version: '3'

services:
  app:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: ad-stat-backend
    command: /start
    volumes:
      - ./app:/app
    ports:
      - 8010:8000
    depends_on:
      - redis
      - db
    env_file:
      - ./compose/.env
    restart: always

  db:
    image: postgres:15.2-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:5432
    env_file:
      - ./compose/.env
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - ${REDIS_PORT}:6379
    env_file:
      - ./compose/.env
  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   container_name: zookeeper
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  # kafka:
  #   image: wurstmeister/kafka
  #   container_name: kafka
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_CREATE_TOPICS: "state_notify"


  zookeeper:
    image: 'wurstmeister/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'wurstmeister/kafka'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CREATE_TOPICS="state_notify"
    depends_on:
      - zookeeper

  kafka-sub:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: ad-stat-backend
    command: /start-sub
    volumes:
      - ./app:/app
    depends_on:
      - kafka
      - redis
      - db
    env_file:
      - ./compose/.env

  celery_worker:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: ad-stat-backend
    command: /start-celeryworker
    volumes:
      - ./app:/app
    depends_on:
      - kafka
      - redis
      - db
    env_file:
      - ./compose/.env

  celery_beat:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: ad-stat-backend
    command: /start-celerybeat
    volumes:
      - ./app:/app
    depends_on:
      - kafka
      - redis
      - db
    env_file:
      - ./compose/.env

volumes:
  postgres_data:
  redis_data:
  kafka-volume:
  zookeeper-volume: